"use strict";(()=>{var e={};e.id=436,e.ids=[436],e.modules={20399:e=>{e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},30517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},6113:e=>{e.exports=require("crypto")},47368:(e,r,s)=>{s.r(r),s.d(r,{originalPathname:()=>f,patchFetch:()=>k,requestAsyncStorage:()=>x,routeModule:()=>g,serverHooks:()=>v,staticGenerationAsyncStorage:()=>w});var t={};s.r(t),s.d(t,{GET:()=>h,POST:()=>m});var o=s(49303),a=s(88716),n=s(60670),i=s(87070),d=s(20728),u=s(9133),p=s(42023),l=s.n(p);let c=u.z.object({token:u.z.string().min(1,"Token \xe9 obrigat\xf3rio"),password:u.z.string().min(8,"Senha deve ter pelo menos 8 caracteres").regex(/[A-Z]/,"Senha deve conter ao menos uma letra mai\xfascula").regex(/[a-z]/,"Senha deve conter ao menos uma letra min\xfascula").regex(/[0-9]/,"Senha deve conter ao menos um n\xfamero").regex(/[^A-Za-z0-9]/,"Senha deve conter ao menos um caractere especial"),confirmPassword:u.z.string()}).refine(e=>e.password===e.confirmPassword,{message:"As senhas n\xe3o coincidem",path:["confirmPassword"]});async function m(e){try{let r=await e.json(),{token:s,password:t}=c.parse(r),o=await d._.user.findFirst({where:{resetToken:s,resetTokenExpiry:{gt:new Date}}});if(!o)return i.NextResponse.json({error:"Token inv\xe1lido ou expirado",message:"O link de recupera\xe7\xe3o de senha \xe9 inv\xe1lido ou j\xe1 expirou. Solicite um novo link."},{status:400});let a=await l().hash(t,12);return await d._.user.update({where:{id:o.id},data:{password:a,resetToken:null,resetTokenExpiry:null}}),await d._.auditLog.create({data:{userId:o.id,eventType:"PASSWORD_RESET",ip:e.ip||e.headers.get("x-forwarded-for")||"unknown",userAgent:e.headers.get("user-agent"),details:{email:o.email,timestamp:new Date().toISOString()}}}),i.NextResponse.json({success:!0,message:"Senha redefinida com sucesso! Voc\xea j\xe1 pode fazer login com sua nova senha."})}catch(e){if(console.error("Error in reset-password endpoint:",e),e instanceof u.z.ZodError)return i.NextResponse.json({error:"Dados inv\xe1lidos",details:e.errors[0]?.message||"Dados de entrada inv\xe1lidos",field:e.errors[0]?.path[0]||"unknown"},{status:400});return i.NextResponse.json({error:"Erro interno do servidor"},{status:500})}}async function h(e){try{let{searchParams:r}=new URL(e.url),s=r.get("token");if(!s)return i.NextResponse.json({error:"Token \xe9 obrigat\xf3rio"},{status:400});let t=await d._.user.findFirst({where:{resetToken:s,resetTokenExpiry:{gt:new Date}},select:{id:!0,email:!0,resetTokenExpiry:!0}});if(!t)return i.NextResponse.json({valid:!1,error:"Token inv\xe1lido ou expirado"},{status:400});return i.NextResponse.json({valid:!0,email:t.email,expiresAt:t.resetTokenExpiry})}catch(e){return console.error("Error validating reset token:",e),i.NextResponse.json({error:"Erro interno do servidor"},{status:500})}}let g=new o.AppRouteRouteModule({definition:{kind:a.x.APP_ROUTE,page:"/api/auth/reset-password/route",pathname:"/api/auth/reset-password",filename:"route",bundlePath:"app/api/auth/reset-password/route"},resolvedPagePath:"/Users/viniciusalbino/Documents/GitHub/clausediff.nosync/app/api/auth/reset-password/route.ts",nextConfigOutput:"",userland:t}),{requestAsyncStorage:x,staticGenerationAsyncStorage:w,serverHooks:v}=g,f="/api/auth/reset-password/route";function k(){return(0,n.patchFetch)({serverHooks:v,staticGenerationAsyncStorage:w})}},20728:(e,r,s)=>{s.d(r,{_:()=>o});let t=require("@prisma/client"),o=globalThis.prisma??new t.PrismaClient({log:["error"],datasources:{db:{url:process.env.DATABASE_URL}}})}};var r=require("../../../../webpack-runtime.js");r.C(e);var s=e=>r(r.s=e),t=r.X(0,[948,532,70,23],()=>s(47368));module.exports=t})();